/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto.Clases;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;

/**
 *
 * @author EQUIPO
 */
public class Menu extends javax.swing.JFrame {
public Usuarios usuario;
public Servidor servidor;
    /**
     * Creates new form Menu
     */
    public Menu(Usuarios usuarios, Servidor servidor) {
        this.servidor=servidor;
        this.usuario=usuarios;
        initComponents();
        this.setLocationRelativeTo(null);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbotonproveedor = new javax.swing.JButton();
        jbotonpedidos = new javax.swing.JButton();
        jbotonproductos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jbotnosalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jbotonproveedor.setText("Proveedores");
        jbotonproveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbotonproveedorActionPerformed(evt);
            }
        });

        jbotonpedidos.setText("Pedidos");
        jbotonpedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbotonpedidosActionPerformed(evt);
            }
        });

        jbotonproductos.setText("Productos");
        jbotonproductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbotonproductosActionPerformed(evt);
            }
        });

        jLabel1.setText("Menu Principal");

        jbotnosalir.setBackground(new java.awt.Color(255, 0, 0));
        jbotnosalir.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jbotnosalir.setForeground(new java.awt.Color(255, 255, 255));
        jbotnosalir.setText("x");
        jbotnosalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbotnosalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbotnosalir))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbotonproveedor)
                        .addGap(18, 18, 18)
                        .addComponent(jbotonpedidos)))
                .addGap(18, 18, 18)
                .addComponent(jbotonproductos)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jbotnosalir, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbotonproveedor)
                    .addComponent(jbotonpedidos)
                    .addComponent(jbotonproductos))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbotnosalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbotnosalirActionPerformed
        // TODO add your handling code here:
        servidor.desconexion();
        System.exit(0);
    }//GEN-LAST:event_jbotnosalirActionPerformed

    private void jbotonproductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbotonproductosActionPerformed
        // TODO add your handling code here:
        Productos listaTabla= new Productos();
        EntityManager mn= servidor.getEm();
        TypedQuery<Producto> query=mn.createNamedQuery("Producto.findAll", Producto.class);
        List<Producto> listaProductos=query.getResultList();
        for (Producto producto : listaProductos) {            
           listaTabla.Ingresar(producto.getNombre(), producto.getExistencia(), producto.getPrecioEntrada(), producto.getPrecioSalida());
        }
        ProxyInvetario inventaProxy= new ProxyInvetario(listaTabla.getNombre(),listaTabla.getExistencia(),listaTabla.getPrecioEntrada(),listaTabla.getPrecioSalida());
        FormsProducto formsproducto = new FormsProducto(inventaProxy, servidor, usuario);
        formsproducto.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbotonproductosActionPerformed

    private void jbotonproveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbotonproveedorActionPerformed
        // TODO add your handling code here:
        VectorProveedores listaTabla= new VectorProveedores();
        EntityManager mn= servidor.getEm();
        TypedQuery<Proveedor> query=mn.createNamedQuery("Proveedor.findAll", Proveedor.class);
        List<Proveedor> listaProveedores=query.getResultList();
        for (Proveedor proveedor : listaProveedores) {            
           listaTabla.ingreso(proveedor.getNombre(),proveedor.getDireccion(),proveedor.getTelefono());
        }
        ProxyProveedor proxyproveedor = new ProxyProveedor(listaTabla.getNombre(),listaTabla.getDireccion(),listaTabla.getTelefono());
        FormsProveedor formsProveedor= new FormsProveedor(servidor,usuario,proxyproveedor);
        formsProveedor.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbotonproveedorActionPerformed

    private void jbotonpedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbotonpedidosActionPerformed
        // TODO add your handling code here:
        frmVenta ventas = new frmVenta(servidor,usuario, "");
        ventas.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbotonpedidosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbotnosalir;
    private javax.swing.JButton jbotonpedidos;
    private javax.swing.JButton jbotonproductos;
    private javax.swing.JButton jbotonproveedor;
    // End of variables declaration//GEN-END:variables
}
